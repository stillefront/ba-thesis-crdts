@online{about/teamthrufloDevelopingLocalfirstSoftware2023,
  title = {Developing Local-First Software - {{ElectricSQL}}},
  author = {{about/team\#thruflo}},
  date = {2023-02-09T00:00:00},
  url = {https://electric-sql.com/blog/2023/02/09/developing-local-first-software},
  urldate = {2024-06-19},
  abstract = {Exploring the key differences and trade-offs between building local-first vs cloud-first apps.},
  langid = {english},
  file = {/home/alexej/Zotero/storage/ZA7PTTQ6/developing-local-first-software.html}
}

@online{adlrochaAdlrochaWhatIf2020,
  type = {Substack newsletter},
  title = {@adlrocha - {{What}} If We Had {{Local-First Software}}?},
  author = {{adlrocha}},
  date = {2020-10-15},
  url = {https://adlrocha.substack.com/p/adlrocha-what-if-we-had-local-first},
  urldate = {2024-06-19},
  abstract = {The path to an offline SaaS model},
  organization = {@adlrocha Weekly Newsletter},
  file = {/home/alexej/Zotero/storage/UUX6YUFI/adlrocha-what-if-we-had-local-first.html}
}

@online{almeidaApproachesConflictfreeReplicated2023,
  title = {Approaches to {{Conflict-free Replicated Data Types}}},
  author = {Almeida, Paulo Sérgio},
  date = {2023-10-27},
  eprint = {2310.18220},
  eprinttype = {arXiv},
  eprintclass = {cs},
  doi = {10.48550/arXiv.2310.18220},
  url = {http://arxiv.org/abs/2310.18220},
  urldate = {2024-06-13},
  abstract = {Conflict-free Replicated Data Types (CRDTs) allow optimistic replication in a principled way. Different replicas can proceed independently, being available even under network partitions, and always converging deterministically: replicas that have received the same updates will have equivalent state, even if received in different orders. After a historical tour of the evolution from sequential data types to CRDTs, we present in detail the two main approaches to CRDTs, operation-based and state-based, including two important variations, the pure operation-based and the delta-state based. Intended as a tutorial for prospective CRDT researchers and designers, it provides solid coverage of the essential concepts, clarifying some misconceptions which frequently occur, but also presents some novel insights gained from considerable experience in designing both specific CRDTs and approaches to CRDTs.},
  pubstate = {preprint},
  keywords = {Computer Science - Distributed Parallel and Cluster Computing,crdt,general},
  file = {/home/alexej/Zotero/storage/ZVQC326V/Almeida - 2023 - Approaches to Conflict-free Replicated Data Types.pdf;/home/alexej/Zotero/storage/7BL699NL/2310.html}
}

@incollection{baqueroMakingOperationBasedCRDTs2014,
  title = {Making {{Operation-Based CRDTs Operation-Based}}},
  booktitle = {Distributed {{Applications}} and {{Interoperable Systems}}},
  author = {Baquero, Carlos and Almeida, Paulo Sérgio and Shoker, Ali},
  editor = {Magoutis, Kostas and Pietzuch, Peter},
  date = {2014},
  volume = {8460},
  pages = {126--140},
  publisher = {Springer Berlin Heidelberg},
  location = {Berlin, Heidelberg},
  doi = {10.1007/978-3-662-43352-2_11},
  url = {http://link.springer.com/10.1007/978-3-662-43352-2_11},
  urldate = {2024-06-19},
  isbn = {978-3-662-43351-5 978-3-662-43352-2},
  file = {/home/alexej/Zotero/storage/E8AGNZND/Baquero et al. - 2014 - Making Operation-Based CRDTs Operation-Based.pdf}
}

@inproceedings{bauwensCausalityStabilityUnderstanding2020,
  title = {From Causality to Stability: Understanding and Reducing Meta-Data in {{CRDTs}}},
  shorttitle = {From Causality to Stability},
  booktitle = {Proceedings of the 17th {{International Conference}} on {{Managed Programming Languages}} and {{Runtimes}}},
  author = {Bauwens, Jim and Gonzalez Boix, Elisa},
  date = {2020-11-04},
  pages = {3--14},
  publisher = {ACM},
  location = {Virtual UK},
  doi = {10.1145/3426182.3426183},
  url = {https://dl.acm.org/doi/10.1145/3426182.3426183},
  urldate = {2024-06-19},
  eventtitle = {{{MPLR}} '20: 17th {{International Conference}} on {{Managed Programming Languages}} and {{Runtimes}}},
  isbn = {978-1-4503-8853-5},
  langid = {english},
  file = {/home/alexej/Zotero/storage/3Z4XQWEM/Bauwens und Gonzalez Boix - 2020 - From causality to stability understanding and red.pdf}
}

@inproceedings{castineiraCollaborativeOfflineWeb2015,
  title = {Collaborative Offline Web Applications Using Conflict-Free Replicated Data Types},
  booktitle = {Proceedings of the {{First Workshop}} on {{Principles}} and {{Practice}} of {{Consistency}} for {{Distributed Data}}},
  author = {Castiñeira, Santiago J. and Bieniusa, Annette},
  date = {2015-04-21},
  pages = {1--4},
  publisher = {ACM},
  location = {Bordeaux France},
  doi = {10.1145/2745947.2745952},
  url = {https://dl.acm.org/doi/10.1145/2745947.2745952},
  urldate = {2024-06-19},
  abstract = {The use cases for Conflict-free Replicated Data Types (CRDTs) that are studied in the literature are limited to collaborative editing applications and data stores. The communication protocols used to distribute replica updates in these scenarios are usually assumed to be some form of highly scalable gossip protocol. In this paper, a new type of application for CRDTs is introduced and studied: collaborative offline web applications. We demonstrate the feasibility of CRDTs in this scenario, and analyze the trade-offs of three existing communication protocols that can be employed for these applications.},
  eventtitle = {{{EuroSys}} '15: {{Tenth EuroSys Conference}} 2015},
  isbn = {978-1-4503-3537-9},
  langid = {english},
  file = {/home/alexej/Zotero/storage/2W2D9PWA/Castiñeira und Bieniusa - 2015 - Collaborative offline web applications using confl.pdf}
}

@online{CompilaServiciosBackend,
  title = {Compila los servicios de backend necesarios para una app de WebRTC | Articles},
  url = {https://web.dev/articles/webrtc-infrastructure?hl=es-419},
  urldate = {2024-06-13},
  langid = {spanish},
  organization = {web.dev},
  keywords = {p2p,signalling server,webrtc},
  file = {/home/alexej/Zotero/storage/U68XRY7C/webrtc-infrastructure.html}
}

@online{conclave-teamConclave,
  title = {Conclave},
  author = {family=team, prefix=conclave-, useprefix=true},
  url = {http://conclave-team.github.io/conclave-site/},
  urldate = {2024-06-13},
  abstract = {A private and secure real-time collaborative text editor},
  langid = {english},
  keywords = {case-study,conclave,crdt,editor},
  file = {/home/alexej/Zotero/storage/3UTFWAC5/conclave-site.html}
}

@inproceedings{conwayLogicLatticesDistributed2012,
  title = {Logic and Lattices for Distributed Programming},
  booktitle = {Proceedings of the {{Third ACM Symposium}} on {{Cloud Computing}}},
  author = {Conway, Neil and Marczak, William R. and Alvaro, Peter and Hellerstein, Joseph M. and Maier, David},
  date = {2012-10-14},
  pages = {1--14},
  publisher = {ACM},
  location = {San Jose California},
  doi = {10.1145/2391229.2391230},
  url = {https://dl.acm.org/doi/10.1145/2391229.2391230},
  urldate = {2024-06-19},
  eventtitle = {{{SOCC}} '12: {{ACM Symposium}} on {{Cloud Computing}}},
  isbn = {978-1-4503-1761-0},
  langid = {english},
  file = {/home/alexej/Zotero/storage/5RIE793K/Conway et al. - 2012 - Logic and lattices for distributed programming.pdf}
}

@online{CRDTsConflictfreeReplicated,
  title = {About {{CRDTs}} • {{Conflict-free Replicated Data Types}}},
  url = {https://crdt.tech/},
  urldate = {2024-06-19},
  abstract = {Resources and community around CRDT technology — papers, blog posts, code and more.},
  langid = {english},
  organization = {Conflict-free Replicated Data Types},
  file = {/home/alexej/Zotero/storage/9BB5THF7/crdt.tech.html}
}

@online{CreateReactApp,
  title = {Create {{React App}}},
  url = {https://create-react-app.dev/},
  urldate = {2024-06-24},
  abstract = {Set up a modern web app by running one command.},
  langid = {english},
  file = {/home/alexej/Zotero/storage/SPIEG4QU/create-react-app.dev.html}
}

@online{DisorderlyLabs,
  title = {Disorderly {{Labs}}},
  url = {https://disorderlylabs.github.io/#},
  urldate = {2024-06-19}
}

@video{dotconferencesDotJS2019James2020,
  entrysubtype = {video},
  title = {{{dotJS}} 2019 - {{James Long}} - {{CRDTs}} for {{Mortals}}},
  editor = {{dotconferences}},
  editortype = {director},
  date = {2020-01-09},
  url = {https://www.youtube.com/watch?v=DEcwa68f-jY},
  urldate = {2024-06-19},
  abstract = {Creative Commons-Lizenz mit Quellenangabe (Wiederverwendung erlaubt)}
}

@online{GentleIntroductionCRDTs,
  title = {A {{Gentle Introduction}} to {{CRDTs}}},
  url = {https://vlcn.io/blog/intro-to-crdts},
  urldate = {2024-06-19},
  abstract = {Conflict Free Replicated Data types (CRDTs) can be tricky. You may spend months reading papers and implementing different algorithms before they finally click and become simple. That or they'll seem simple out of the gate and you'll be missing a bunch of nuance.},
  langid = {english},
  organization = {vlcn.io},
  file = {/home/alexej/Zotero/storage/AWGFQDTP/intro-to-crdts.html}
}

@online{IndexedDBAPIWeb2024,
  title = {{{IndexedDB API}} - {{Web APIs}} | {{MDN}}},
  date = {2024-04-04},
  url = {https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API},
  urldate = {2024-06-19},
  abstract = {IndexedDB is a low-level API for client-side storage of significant amounts of structured data, including files/blobs. This API uses indexes to enable high-performance searches of this data. While Web Storage is useful for storing smaller amounts of data, it is less useful for storing larger amounts of structured data. IndexedDB provides a solution. This is the main landing page for MDN's IndexedDB coverage — here we provide links to the full API reference and usage guides, browser support details, and some explanation of key concepts.},
  langid = {american},
  file = {/home/alexej/Zotero/storage/ANRQA9MP/IndexedDB_API.html}
}

@online{InspiredFocusedThinking,
  title = {Inspired \& Focused Thinking with {{Muse}}},
  url = {https://museapp.com/},
  urldate = {2024-06-08},
  abstract = {Muse is a canvas for thinking that helps you get clarity on things that matter. Think in private or collaborate with others. Available for iPad and Mac.},
  langid = {english},
  keywords = {crdt,local-first,muse,products},
  file = {/home/alexej/Zotero/storage/9V6K2EG7/museapp.com.html}
}

@article{jannesOWebSyncSeamlessSynchronization2021,
  title = {{{OWebSync}}: {{Seamless Synchronization}} of {{Distributed Web Clients}}},
  shorttitle = {{{OWebSync}}},
  author = {Jannes, Kristof and Lagaisse, Bert and Joosen, Wouter},
  date = {2021-09-01},
  journaltitle = {IEEE Transactions on Parallel and Distributed Systems},
  shortjournal = {IEEE Trans. Parallel Distrib. Syst.},
  volume = {32},
  number = {9},
  pages = {2338--2351},
  issn = {1045-9219, 1558-2183, 2161-9883},
  doi = {10.1109/TPDS.2021.3066276},
  url = {https://ieeexplore.ieee.org/document/9380486/},
  urldate = {2024-06-19},
  file = {/home/alexej/Zotero/storage/VPIKIFFT/Jannes et al. - 2021 - OWebSync Seamless Synchronization of Distributed .pdf}
}

@article{kakiMergeableReplicatedData2019,
  title = {Mergeable Replicated Data Types},
  author = {Kaki, Gowtham and Priya, Swarn and Sivaramakrishnan, Kc and Jagannathan, Suresh},
  date = {2019-10-10},
  journaltitle = {Proceedings of the ACM on Programming Languages},
  shortjournal = {Proc. ACM Program. Lang.},
  volume = {3},
  pages = {1--29},
  issn = {2475-1421},
  doi = {10.1145/3360580},
  url = {https://dl.acm.org/doi/10.1145/3360580},
  urldate = {2024-06-19},
  abstract = {Programming geo-replicated distributed systems is challenging given the complexity of reasoning about different evolving states on different replicas. Existing approaches to this problem impose significant burden on application developers to consider the effect of how operations performed on one replica are witnessed and applied on others. To alleviate these challenges, we present a fundamentally different approach to programming in the presence of replicated state. Our insight is based on the use of invertible relational specifications of an inductively-defined data type as a mechanism to capture salient aspects of the data type relevant to how its different instances can be safely merged in a replicated environment. Importantly, because these specifications only address a data type's (static) structural properties, their formulation does not require exposing low-level system-level details concerning asynchrony, replication, visibility, etc. As a consequence, our framework enables the correct-by-construction synthesis of rich merge functions over arbitrarily complex (i.e., composable) data types. We show that the use of a rich relational specification language allows us to extract sufficient conditions to automatically derive merge functions that have meaningful non-trivial convergence properties. We incorporate these ideas in a tool called Quark, and demonstrate its utility via a detailed evaluation study on real-world benchmarks.},
  issue = {OOPSLA},
  langid = {english}
}

@online{kleppmanLocalfirstSoftwareYou2019,
  title = {Local-First Software: {{You}} Own Your Data, in Spite of the Cloud},
  shorttitle = {Local-First Software},
  author = {Kleppman, Martin and Wiggins, Adam and family=Hardenberg, given=Peter, prefix=van, useprefix=true and McGranaghan, Mark},
  date = {2019-04-01T00:00:00+00:00},
  url = {https://www.inkandswitch.com/local-first/},
  urldate = {2024-06-08},
  abstract = {A new generation of collaborative software that allows users to retain ownership of their data.},
  langid = {american},
  keywords = {decentralized,local-first,motivation},
  file = {/home/alexej/Zotero/storage/MXAWL24F/local-first.html}
}

@article{kleppmannConflictFreeReplicatedJSON2017,
  title = {A {{Conflict-Free Replicated JSON Datatype}}},
  author = {Kleppmann, Martin and Beresford, Alastair R.},
  date = {2017-10-01},
  journaltitle = {IEEE Transactions on Parallel and Distributed Systems},
  shortjournal = {IEEE Trans. Parallel Distrib. Syst.},
  volume = {28},
  number = {10},
  pages = {2733--2746},
  issn = {1045-9219},
  doi = {10.1109/TPDS.2017.2697382},
  url = {http://ieeexplore.ieee.org/document/7909007/},
  urldate = {2024-06-19},
  file = {/home/alexej/Zotero/storage/68P58WH2/Kleppmann und Beresford - 2017 - A Conflict-Free Replicated JSON Datatype.pdf}
}

@article{kleppmannHighlyAvailableMoveOperation2022,
  title = {A {{Highly-Available Move Operation}} for {{Replicated Trees}}},
  author = {Kleppmann, Martin and Mulligan, Dominic P. and Gomes, Victor B. F. and Beresford, Alastair R.},
  date = {2022-07-01},
  journaltitle = {IEEE Transactions on Parallel and Distributed Systems},
  shortjournal = {IEEE Trans. Parallel Distrib. Syst.},
  volume = {33},
  number = {7},
  pages = {1711--1724},
  issn = {1045-9219, 1558-2183, 2161-9883},
  doi = {10.1109/TPDS.2021.3118603},
  url = {https://ieeexplore.ieee.org/document/9563274/},
  urldate = {2024-06-19},
  file = {/home/alexej/Zotero/storage/AG5EWP5Q/Kleppmann et al. - 2022 - A Highly-Available Move Operation for Replicated T.pdf}
}

@inproceedings{kleppmannMovingElementsList2020,
  title = {Moving Elements in List {{CRDTs}}},
  booktitle = {Proceedings of the 7th {{Workshop}} on {{Principles}} and {{Practice}} of {{Consistency}} for {{Distributed Data}}},
  author = {Kleppmann, Martin},
  date = {2020-04-27},
  pages = {1--6},
  publisher = {ACM},
  location = {Heraklion Greece},
  doi = {10.1145/3380787.3393677},
  url = {https://dl.acm.org/doi/10.1145/3380787.3393677},
  urldate = {2024-06-19},
  eventtitle = {{{EuroSys}} '20: {{Fifteenth EuroSys Conference}} 2020},
  isbn = {978-1-4503-7524-5},
  langid = {english},
  file = {/home/alexej/Zotero/storage/QGYTA96V/Kleppmann - 2020 - Moving elements in list CRDTs.pdf}
}

@article{kleppmannResearchPracticeConvergence2022,
  title = {Research for Practice: Convergence},
  shorttitle = {Research for Practice},
  author = {Kleppmann, Martin and Alvaro, Peter},
  date = {2022-11},
  journaltitle = {Communications of the ACM},
  shortjournal = {Commun. ACM},
  volume = {65},
  number = {11},
  pages = {104--106},
  issn = {0001-0782, 1557-7317},
  doi = {10.1145/3563901},
  url = {https://dl.acm.org/doi/10.1145/3563901},
  urldate = {2024-06-19},
  abstract = {The return of a popular feature that shares the joy and utility of reading CS research between academics and their counterparts in industry.},
  langid = {english},
  file = {/home/alexej/Zotero/storage/Q4P676QK/Kleppmann und Alvaro - 2022 - Research for practice convergence.pdf}
}

@online{ListCRDTBenchmarks,
  title = {List {{CRDT Benchmarks}}},
  url = {https://jsonjoy.com/blog/list-crdt-benchmarks},
  urldate = {2024-06-19}
}

@video{local-firstconfPresentFutureLocalfirst2024,
  entrysubtype = {video},
  title = {The Past, Present, and Future of Local-First - {{Martin Kleppmann}} ({{Local-First Conf}})},
  editor = {{Local-First Conf}},
  editortype = {director},
  date = {2024-06-18},
  url = {https://www.youtube.com/watch?v=NMq0vncHJvU},
  urldate = {2024-06-25},
  abstract = {Speaker:  Martin Kleppmann, University of Cambridge, Inc \& Switch We have come a long way since my colleagues and I published the local-first essay five years ago. In this talk I'll review where the local-first idea came from, where we are now, and what I hope the local-first community can work towards in the future. --- Learn from engineers, designers, academics, startups, and indie developers who are putting local-first into practice and reaping the benefits of a cloud-optional architecture. Join our discord! ~~/~discord~~ --- Subscribe for more talks:  ‪@localfirstconf‬  Follow: ~~/~localfirstconf~~ Visit: https://www.localfirstconf.com --- Thanks to our wonderful sponsors: - DXOS - https://dxos.org/ (foundation layer for cloudless, collaborative software) - Heavybit - https://www.heavybit.com/ (accelerator program for developer-first startups) - PowerSync - https://www.powersync.com/ (Postgres and SQLite sync layer) - Rocicorp - https://rocicorp.dev/ (creator of multiplayer and sync infrastructure) -  Axil - https://axil.llc/ (agency focused on local-first software dev) - Affine - https://affine.pro/ (workspace merging docs, whiteboards, and databases) - CrabNebula - https://crabnebula.dev/ (creator of Tauri, for deploying web technologies as desktop apps) --- Thanks to https://sceal-studio.com/ for the videos!}
}

@online{LocalFirstConf2024,
  title = {Local-{{First Conf}} 2024},
  url = {https://www.localfirstconf.com/},
  urldate = {2024-06-25},
  abstract = {Join us for the world’s first local-first conference. Connect with a rapidly-growing community in an intimate setting. Berlin 30th May 2024.},
  langid = {english}
}

@online{LocalFirstSoftware,
  title = {Local-{{First Software}}},
  url = {https://localfirstweb.dev/},
  urldate = {2024-06-19},
  abstract = {A fresh way to think about building web applications.},
  langid = {english}
}

@online{LocalfirstSoftwareYou,
  title = {Local-First Software: {{You}} Own Your Data, in Spite of the Cloud},
  url = {https://www.inkandswitch.com/local-first/},
  urldate = {2024-06-08},
  keywords = {decentralized,local-first,motivation},
  file = {/home/alexej/Zotero/storage/YGISRRSU/local-first.html}
}

@article{lvNovelCRDTbasedSynchronization2018,
  title = {A Novel {{CRDT-based}} Synchronization Method for Real-Time Collaborative {{CAD}} Systems},
  author = {Lv, Xiao and He, Fazhi and Cheng, Yuan and Wu, Yiqi},
  date = {2018-10},
  journaltitle = {Advanced Engineering Informatics},
  shortjournal = {Advanced Engineering Informatics},
  volume = {38},
  pages = {381--391},
  issn = {14740346},
  doi = {10.1016/j.aei.2018.08.008},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S147403461730486X},
  urldate = {2024-06-19},
  abstract = {CRDT (Conflict-free Replicated Data Type) has been proposed as an alternative synchronization mechanism for collaborative text editing systems in recent years. However, CRDT-based synchronization methods for collaborative systems with sophisticated objects, such as collaborative CAD (Co-CAD) systems, are rarely investigated in previous literatures. How well CRDT-based synchronization methods for Co-CAD systems could perform remains unknown. This paper presents a novel CRDT-based synchronization method to maintain eventual consistency for the feature-based CAD model. Firstly, three operation relations are defined as the dependencyconflict relation, the mutual exclusive relation and the compatible relation in context of the feature-based CAD systems. Secondly, a feature-based conflict detection mechanism is proposed to detect the three relations. Thirdly, a feature-based conflict resolution approach under the CRDT framework is presented to solve the conflicts. Fourthly, the time complexity and the space complexity are analyzed in theory. Finally, case studies of collaborative modeling procedures verify the correctness and feasibility of the proposed method.},
  langid = {english},
  file = {/home/alexej/Zotero/storage/89RYWCQ6/Lv et al. - 2018 - A novel CRDT-based synchronization method for real.pdf}
}

@video{martinkleppmannCRDTsHardParts2020,
  entrysubtype = {video},
  title = {{{CRDTs}}: {{The Hard Parts}}},
  shorttitle = {{{CRDTs}}},
  editor = {{Martin Kleppmann}},
  editortype = {director},
  date = {2020-07-06},
  url = {https://www.youtube.com/watch?v=x7drE24geUw},
  urldate = {2024-06-19},
  abstract = {A talk on the latest research on CRDTs, originally given at the Hydra distributed computing conference on 6 July 2020. References: https://martin.kleppmann.com/2020/07/... Slides: https://speakerdeck.com/ept/crdts-the... Abstract: Conflict-free Replicated Data Types (CRDTs) are an increasingly popular family of algorithms for optimistic replication. They allow data to be concurrently updated on several replicas, even while those replicas are offline, and provide a robust way of merging those updates back into a consistent state. CRDTs are used in geo-replicated databases, multi-user collaboration software, distributed processing frameworks, and various other systems. However, while the basic principles of CRDTs are now quite well known, many challenging problems are lurking below the surface. It turns out that CRDTs are easy to implement badly. Many published algorithms have anomalies that cause them to behave strangely in some situations. Simple implementations often have terrible performance, and making the performance good is challenging. In this talk Martin goes beyond the introductory material on CRDTs, and discusses some of the hard-won lessons from years of research on making CRDTs work in practice. Bio: Dr Martin Kleppmann is a researcher in distributed systems at the University of Cambridge, and author of the acclaimed "Designing Data-Intensive Applications" (O'Reilly Media, 2017). He mainly works on collaboration software, CRDTs, and formal verification of distributed algorithms. Previously he was a software engineer and entrepreneur at Internet companies including LinkedIn and Rapportive, where he worked on large-scale data infrastructure. https://martin.kleppmann.com/ ~~/~martinkl}
}

@online{preguicaConflictfreeReplicatedData2018,
  title = {Conflict-Free {{Replicated Data Types}} ({{CRDTs}})},
  author = {Preguiça, Nuno and Baquero, Carlos and Shapiro, Marc},
  date = {2018-05-16},
  eprint = {1805.06358},
  eprinttype = {arXiv},
  eprintclass = {cs},
  doi = {10.1007/978-3-319-63962-8\_185-1},
  url = {http://arxiv.org/abs/1805.06358},
  urldate = {2024-06-07},
  abstract = {A conflict-free replicated data type (CRDT) is an abstract data type, with a well defined interface, designed to be replicated at multiple processes and exhibiting the following properties: (1) any replica can be modified without coordinating with another replicas; (2) when any two replicas have received the same set of updates, they reach the same state, deterministically, by adopting mathematically sound rules to guarantee state convergence.},
  pubstate = {preprint},
  keywords = {Computer Science - Distributed Parallel and Cluster Computing},
  file = {/home/alexej/Zotero/storage/TZSKVXUC/Preguiça et al. - 2018 - Conflict-free Replicated Data Types (CRDTs).pdf;/home/alexej/Zotero/storage/FQV6BSYL/1805.html}
}

@online{preguicaConflictfreeReplicatedData2018a,
  title = {Conflict-Free {{Replicated Data Types}} ({{CRDTs}})},
  author = {Preguiça, Nuno and Baquero, Carlos and Shapiro, Marc},
  date = {2018-05-16},
  eprint = {1805.06358},
  eprinttype = {arXiv},
  eprintclass = {cs},
  doi = {10.1007/978-3-319-63962-8\_185-1},
  url = {http://arxiv.org/abs/1805.06358},
  urldate = {2024-06-19},
  abstract = {A conflict-free replicated data type (CRDT) is an abstract data type, with a well defined interface, designed to be replicated at multiple processes and exhibiting the following properties: (1) any replica can be modified without coordinating with another replicas; (2) when any two replicas have received the same set of updates, they reach the same state, deterministically, by adopting mathematically sound rules to guarantee state convergence.},
  langid = {english},
  pubstate = {preprint},
  keywords = {Computer Science - Distributed Parallel and Cluster Computing},
  file = {/home/alexej/Zotero/storage/LXLALB5J/Preguiça et al. - 2018 - Conflict-free Replicated Data Types (CRDTs).pdf}
}

@online{prokopovLocalFirstForever2024,
  title = {Local, First, Forever},
  author = {Prokopov, Nikita},
  date = {2024-06-24},
  url = {https://tonsky.me/blog/crdt-filesync},
  urldate = {2024-06-25},
  abstract = {We explore how to build local-first sync on top of simple file storage},
  langid = {english},
  organization = {tonsky.me}
}

@online{React,
  title = {React},
  url = {https://react.dev/},
  urldate = {2024-06-24},
  abstract = {React is the library for web and native user interfaces. Build user interfaces out of individual pieces called components written in JavaScript. React is designed to let you seamlessly combine components written by independent people, teams, and organizations.},
  langid = {english},
  file = {/home/alexej/Zotero/storage/VKHAP4X7/react.dev.html}
}

@article{rinbergDSONJSONCRDT2022,
  title = {{{DSON}}: {{JSON CRDT}} Using Delta-Mutations for Document Stores},
  shorttitle = {{{DSON}}},
  author = {Rinberg, Arik and Solomon, Tomer and Shlomo, Roee and Khazma, Guy and Lushi, Gal and Keidar, Idit and Ta-Shma, Paula},
  date = {2022-01},
  journaltitle = {Proceedings of the VLDB Endowment},
  shortjournal = {Proc. VLDB Endow.},
  volume = {15},
  number = {5},
  pages = {1053--1065},
  issn = {2150-8097},
  doi = {10.14778/3510397.3510403},
  url = {https://dl.acm.org/doi/10.14778/3510397.3510403},
  urldate = {2024-06-19},
  abstract = {We propose DSON, a space efficient 𝛿-based CRDT approach for distributed JSON document stores, enabling high availability at a global scale, while providing strong eventual consistency guarantees. We define the semantics of our CRDT based approach formally, and prove its correctness and convergence. Previous approaches optimize for collaborative document editing and store metadata proportional to the number of updates to a document, which is not acceptable for long lived document management. The metadata stored with our approach is bounded by 𝑂 (𝑘2𝐷 + 𝑛 log 𝑛), where 𝑛 is the number of replicas, 𝐷 is the number of document elements, and 𝑘 ≤ 𝑛 is the number of concurrent document updates. We also implement our approach[37] and demonstrate its space efficiency empirically. Experimental analysis shows that the metadata stored is typically significantly less than the worst case. This provides the basis for robust highly available distributed document stores with well defined semantics and safety guarantees, relieving application developers from the burden of conflict resolution.},
  langid = {english},
  file = {/home/alexej/Zotero/storage/ZXEQHXQI/Rinberg et al. - 2022 - DSON JSON CRDT using delta-mutations for document.pdf}
}

@article{rohReplicatedAbstractData2011,
  title = {Replicated Abstract Data Types: {{Building}} Blocks for Collaborative Applications},
  shorttitle = {Replicated Abstract Data Types},
  author = {Roh, Hyun-Gul and Jeon, Myeongjae and Kim, Jin-Soo and Lee, Joonwon},
  date = {2011-03},
  journaltitle = {Journal of Parallel and Distributed Computing},
  shortjournal = {Journal of Parallel and Distributed Computing},
  volume = {71},
  number = {3},
  pages = {354--368},
  issn = {07437315},
  doi = {10.1016/j.jpdc.2010.12.006},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0743731510002716},
  urldate = {2024-06-19},
  langid = {english}
}

@article{shapiroConflictfreeReplicatedData2011,
  title = {Conflict-Free {{Replicated Data Types}}},
  author = {Shapiro, Marc and Preguiça, Nuno and Baquero, Carlos and Zawirski, Marek},
  date = {2011},
  abstract = {Replicating data under Eventual Consistency (EC) allows any replica to accept updates without remote synchronisation. This ensures performance and scalability in largescale distributed systems (e.g., clouds). However, published EC approaches are ad-hoc and error-prone. Under a formal Strong Eventual Consistency (SEC) model, we study sufficient conditions for convergence. A data type that satisfies these conditions is called a Conflictfree Replicated Data Type (CRDT). Replicas of any CRDT are guaranteed to converge in a self-stabilising manner, despite any number of failures. This paper formalises two popular approaches (state- and operation-based) and their relevant sufficient conditions. We study a number of useful CRDTs, such as sets with clean semantics, supporting both add and remove operations, and consider in depth the more complex Graph data type. CRDT types can be composed to develop large-scale distributed applications, and have interesting theoretical properties.},
  langid = {english},
  file = {/home/alexej/Zotero/storage/PUCGJX2U/Shapiro et al. - 2011 - Conﬂict-free Replicated Data Types.pdf}
}

@incollection{shapiroConflictFreeReplicatedData2011a,
  title = {Conflict-{{Free Replicated Data Types}}},
  booktitle = {Stabilization, {{Safety}}, and {{Security}} of {{Distributed Systems}}},
  author = {Shapiro, Marc and Preguiça, Nuno and Baquero, Carlos and Zawirski, Marek},
  editor = {Défago, Xavier and Petit, Franck and Villain, Vincent},
  date = {2011},
  volume = {6976},
  pages = {386--400},
  publisher = {Springer Berlin Heidelberg},
  location = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-24550-3_29},
  url = {http://link.springer.com/10.1007/978-3-642-24550-3_29},
  urldate = {2024-06-19},
  isbn = {978-3-642-24549-7 978-3-642-24550-3},
  file = {/home/alexej/Zotero/storage/SKCJ9D2Z/Shapiro et al. - 2011 - Conflict-Free Replicated Data Types.pdf}
}

@article{sunRealDifferencesOT,
  title = {Real {{Differences}} between {{OT}} and {{CRDT}} for {{Co-Editors}}},
  author = {Sun, Chengzheng},
  langid = {english},
  file = {/home/alexej/Zotero/storage/YEAVWCUY/Sun - Real Differences between OT and CRDT for Co-Editor.pdf}
}

@article{sunRealDifferencesOT2020,
  title = {Real {{Differences}} between {{OT}} and {{CRDT}} in {{Correctness}} and {{Complexity}} for {{Consistency Maintenance}} in {{Co-Editors}}},
  author = {Sun, David and Sun, Chengzheng and Ng, Agustina and Cai, Weiwei},
  date = {2020-05-28},
  journaltitle = {Proceedings of the ACM on Human-Computer Interaction},
  shortjournal = {Proc. ACM Hum.-Comput. Interact.},
  volume = {4},
  pages = {1--30},
  issn = {2573-0142},
  doi = {10.1145/3392825},
  url = {https://dl.acm.org/doi/10.1145/3392825},
  urldate = {2024-06-15},
  abstract = {OT (Operational Transformation) was invented for supporting real-time co-editors in the late 1980s and has evolved to become core techniques widely used in today's working co-editors and adopted in industrial products. CRDT (Commutative Replicated Data Type) for co-editors was first proposed around 2006, under the name of WOOT (WithOut Operational Transformation). Follow-up CRDT variations are commonly labeled as "post-OT" techniques capable of making concurrent operations natively commutative in co-editors. On top of that, CRDT solutions have made broad claims of superiority over OT solutions, and often portrayed OT as an incorrect and inefficient technique. Over one decade later, however, CRDT is rarely found in working co-editors; OT remains the choice for building the vast majority of today's co-editors. Contradictions between the reality and CRDT's purported advantages have been the source of much confusion and debate in co-editing researcher and developer communities. To seek truth from facts, we set out to conduct a comprehensive and critical review on representative OT and CRDT solutions and working co-editors based on them. From this work, we have made important discoveries about OT and CRDT, and revealed facts and evidences that refute CRDT claims over OT on all accounts. These discoveries help explain the underlying reasons for the choice between OT and CRDT in the real world. We report these results in a series of three articles. In this article (the second in the series), we reveal the differences between OT and CRDT in their basic approaches to realizing the same general transformation and how such differences had resulted in different technical challenges and consequential correctness and complexity issues. Moreover, we reveal hidden complexity and algorithmic flaws with representative CRDT solutions, and discuss common myths and facts related to correctness and complexity of OT and CRDT. We hope the discoveries from this work help clear up common myths and confusions surrounding OT and CRDT, and accelerate progress in co-editing technology for real world applications.},
  issue = {CSCW1},
  langid = {english},
  file = {/home/alexej/Zotero/storage/7ECJV7ZJ/Sun et al. - 2020 - Real Differences between OT and CRDT in Correctnes.pdf}
}

@article{sunRealDifferencesOT2020a,
  title = {Real {{Differences}} between {{OT}} and {{CRDT}} under a {{General Transformation Framework}} for {{Consistency Maintenance}} in {{Co-Editors}}},
  author = {Sun, Chengzheng and Sun, David and Ng, Agustina and Cai, Weiwei and Cho, Bryden},
  date = {2020-01-04},
  journaltitle = {Proceedings of the ACM on Human-Computer Interaction},
  shortjournal = {Proc. ACM Hum.-Comput. Interact.},
  volume = {4},
  pages = {1--26},
  issn = {2573-0142},
  doi = {10.1145/3375186},
  url = {https://dl.acm.org/doi/10.1145/3375186},
  urldate = {2024-06-15},
  abstract = {OT (Operational Transformation) was invented for supporting real-time co-editors in the late 1980s and has evolved to become a collection of core techniques widely used in today's working co-editors and adopted in major industrial products. CRDT (Commutative Replicated Data Type) for co-editors was first proposed around 2006, under the name of WOOT (WithOut Operational Transformation). Follow-up CRDT variations are commonly labeled as "post-OT" techniques capable of making concurrent operations natively commutativity in co-editors. On top of that, CRDT solutions have made broad claims of superiority over OT solutions, and routinely portrayed OT as an incorrect, complex and inefficient technique. Over one decade later, however, CRDT is rarely found in working co-editors, and OT remains the choice for building the vast majority of today's co-editors. Contradictions between the reality and CRDT's purported advantages have been the source of much confusion and debate in co-editing research and developer communities. Have the vast majority of co-editors been unfortunate in choosing the faulty and inferior OT, or those CRDT claims are false? What are the real differences between OT and CRDT for co-editors? What are the key factors and underlying reasons behind the choices between OT and CRDT in the real world? A thorough examination of these questions is relevant not only to researchers who are exploring the frontiers of co-editing technologies and systems, but also to practitioners who are seeking viable techniques to build real world applications. To seek truth from facts, we set out to conduct a comprehensive and critical review on representative OT and CRDT solutions and working co-editors based on them. From this work, we have made important discoveries about OT and CRDT, and revealed facts and evidences that refute CRDT claims over OT on all accounts. We report our discoveries in a series of articles and the current article is the first one in this series. In this paper, we present a general transformation framework for consistency maintenance in co-editors, which was distilled from dissecting and examining representative OT and CRDT solutions (and other alternative solutions) during this work, and report our discoveries under the guidance of this framework. In particular, we reveal that CRDT is like OT in following a general transformation approach, but achieves the same transformation indirectly, in contrast to OT direct transformation approach; and CRDT is not natively commutative for concurrent co-editing operations, but has to achieve the same OT commutativity indirectly as well, with consequential correctness and complexity issues. Uncovering the hidden transformation nature and demystifying the commutativity property of CRDT provides much-needed clarity about what CRDT really is and is not to co-editing, and serves as the foundation to explore the real differences between OT and CRDT in correctness, complexity, implementation, and real world applications, which are reported in follow-up articles. We hope discoveries from this work help clear up common misconceptions and confusions surrounding OT and CRDT, and accelerate progress in co-editing technology for real world applications.?},
  issue = {GROUP},
  langid = {english},
  file = {/home/alexej/Zotero/storage/8UKFREA4/Sun et al. - 2020 - Real Differences between OT and CRDT under a Gener.pdf}
}

@video{tl;dr//javascriptcodecastsforworkingdevsConflictFreeReplicatedData2020,
  entrysubtype = {video},
  title = {Conflict-{{Free Replicated Data Types}} ({{CRDT}}) for {{Distributed JavaScript Apps}}.},
  editor = {{TL;DR // JavaScript codecasts for working devs}},
  editortype = {director},
  date = {2020-03-23},
  url = {https://www.youtube.com/watch?v=M8-WFTjZoA0},
  urldate = {2024-06-19},
  abstract = {✍️ “Let’s work on that in Google Docs.” WOOT, Treedoc, RGA, Logoot, LSEQSplit, JSON CRDT… Building a distributed editor is no picnic, so which do we use in our nice React app? https://jonathanleemartin.com For decades, smart people with PhDs have iterated on algorithms to resolve concurrent edits, and with the web’s ubiquity, these techniques can enable decentralized, collaborative JavaScript apps without a central server. We’ll ditch the CS degree and dissect a smattering of distributed editing algorithms in our quest for the perfect sequence CRDT. Recorded at Charlottesville's JavaScript meetup. 👨‍🏫 ~~/~jonathanleemartin~~ Has TL;DR helped you craft better code? Consider supporting me on Patreon. 🤗 Want to keep leveling up your craft? Subscribe for more rapid codecasts on design patterns, refactoring and development approaches. ~~~/~@tldrjs~~ Want a little BTS on the recording studio? Here’s my entire nomadic studio setup: https://www.yellowscale.com/nomadic-r... \_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_ 👋 In between codecasts I’m on Twitter or vlogging about landscape photography. Join me at your favorite hangout! ~~/~nybblr~~ https://www.yellowscale.com/ \_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_ 👨‍🏫 Ready to level up your developer team? I can come to you! I provide custom training solutions through immersive bootcamps, workshops, seminars and speaking engagements. ⚛️ React, Node.js, Web… Let’s work together: hello@jonathanleemartin.com}
}

@incollection{tomterAugmentingSQLiteLocalFirst2021,
  title = {Augmenting {{SQLite}} for {{Local-First Software}}},
  booktitle = {New {{Trends}} in {{Database}} and {{Information Systems}}},
  author = {Tomter, Iver Toft and Yu, Weihai},
  editor = {Bellatreche, Ladjel and Dumas, Marlon and Karras, Panagiotis and Matulevičius, Raimundas and Awad, Ahmed and Weidlich, Matthias and Ivanović, Mirjana and Hartig, Olaf},
  date = {2021},
  volume = {1450},
  pages = {247--257},
  publisher = {Springer International Publishing},
  location = {Cham},
  doi = {10.1007/978-3-030-85082-1_22},
  url = {https://link.springer.com/10.1007/978-3-030-85082-1_22},
  urldate = {2024-06-19},
  abstract = {Local-first software aims at both the ability to work offline on local data and the ability to collaborate across multiple devices. CRDTs (conflict-free replicated data types) are abstractions for offline and collaborative work that guarantees strong eventual consistency. RDB (relational database) is a mature and successful computer industry for management of data, and SQLite is an ideal RDB candidate for offline work on locally stored data. CRRs (conflict-free replicated relations) apply CRDTs to RDB data. This paper presents our work in progress that augments SQLite databases with CRR for local-first software. No modification or extra software is needed for existing SQLite applications to continue working with the augmented databases.},
  isbn = {978-3-030-85081-4 978-3-030-85082-1},
  langid = {english},
  file = {/home/alexej/Zotero/storage/72NXQP79/Tomter und Yu - 2021 - Augmenting SQLite for Local-First Software.pdf}
}

@online{UseJSDocIndex,
  title = {Use {{JSDoc}}: {{Index}}},
  url = {https://jsdoc.app/},
  urldate = {2024-06-24},
  file = {/home/alexej/Zotero/storage/4BHPRDKF/jsdoc.app.html}
}

@inproceedings{vanhardenbergPushPinProductionqualityPeertopeer2020,
  title = {{{PushPin}}: Towards Production-Quality Peer-to-Peer Collaboration},
  shorttitle = {{{PushPin}}},
  booktitle = {Proceedings of the 7th {{Workshop}} on {{Principles}} and {{Practice}} of {{Consistency}} for {{Distributed Data}}},
  author = {Van Hardenberg, Peter and Kleppmann, Martin},
  date = {2020-04-27},
  pages = {1--10},
  publisher = {ACM},
  location = {Heraklion Greece},
  doi = {10.1145/3380787.3393683},
  url = {https://dl.acm.org/doi/10.1145/3380787.3393683},
  urldate = {2024-06-19},
  abstract = {Fully peer-to-peer application software promises many benefits over cloud software, in particular, being able to function indefinitely without requiring servers. Research on distributed consistency mechanisms such as CRDTs has laid the foundation for P2P data synchronisation and collaboration. In this paper we report on our experience in taking these technologies beyond research prototypes, and working towards commercial-grade P2P collaboration software. We identify approaches that work well in our experience, such as the functional reactive programming paradigm, and highlight areas in need of further research, such as the reliability of NAT traversal and usability challenges.},
  eventtitle = {{{EuroSys}} '20: {{Fifteenth EuroSys Conference}} 2020},
  isbn = {978-1-4503-7524-5},
  langid = {english},
  file = {/home/alexej/Zotero/storage/FB7WHECD/Van Hardenberg und Kleppmann - 2020 - PushPin towards production-quality peer-to-peer c.pdf}
}

@online{WebRTC,
  title = {{{WebRTC}}},
  url = {https://webrtc.org/},
  urldate = {2024-06-19},
  abstract = {An open framework for the web that enables Real-Time Communications (RTC) capabilities in the browser.},
  langid = {english},
  organization = {WebRTC}
}

@online{WebStorageAPI2024,
  title = {Web {{Storage API}} - {{Web APIs}} | {{MDN}}},
  date = {2024-04-10},
  url = {https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API},
  urldate = {2024-06-19},
  abstract = {The Web Storage API provides mechanisms by which browsers can store key/value pairs, in a much more intuitive fashion than using cookies.},
  langid = {american},
  file = {/home/alexej/Zotero/storage/3S9VXVAY/Web_Storage_API.html}
}

@article{weidnerComposingDecomposingOpbased2020,
  title = {Composing and Decomposing Op-Based {{CRDTs}} with Semidirect Products},
  author = {Weidner, Matthew and Miller, Heather and Meiklejohn, Christopher},
  date = {2020-08-02},
  journaltitle = {Proceedings of the ACM on Programming Languages},
  shortjournal = {Proc. ACM Program. Lang.},
  volume = {4},
  pages = {1--27},
  issn = {2475-1421},
  doi = {10.1145/3408976},
  url = {https://dl.acm.org/doi/10.1145/3408976},
  urldate = {2024-06-19},
  abstract = {Operation-based Conflict-free Replicated Data Types (CRDTs) are eventually consistent replicated data types that automatically resolve conflicts between concurrent operations. Op-based CRDTs must be designed differently for each data type, and current designs use ad-hoc techniques to handle concurrent operations that do not naturally commute. We present a new construction, the semidirect product of op-based CRDTs, which combines the operations of two CRDTs into one while handling conflicts between their concurrent operations in a uniform way. We demonstrate the construction's utility by using it to construct novel CRDTs, as well as decomposing several existing CRDTs as semidirect products of simpler CRDTs. Although it reproduces common CRDT semantics, the semidirect product can be viewed as a restricted kind of operational transformation, thus forming a bridge between these two opposing techniques for constructing replicated data types.},
  issue = {ICFP},
  langid = {english},
  file = {/home/alexej/Zotero/storage/WMY7MZQJ/Weidner et al. - 2020 - Composing and decomposing op-based CRDTs with semi.pdf}
}

@online{weidnerDesigningDataStructures2024,
  title = {Designing Data Structures for Collaborative Apps},
  author = {Weidner, Matthew},
  date = {2024-06-19},
  url = {https://mattweidner.com/2022/02/10/collaborative-data-design.html},
  urldate = {2024-06-19},
  abstract = {Suppose you’re building a collaborative app, along the lines of Google Docs/Sheets/Slides, Figma, Notion, etc. One challenge you’ll face is the actual collaboration: when one user changes the shared state, their changes need to show up for every other user. For example, if multiple users type at the same time in a text field, the result should reflect all of their changes and be consistent (identical for all users). Conflict-free Replicated Data Types (CRDTs) provide a solution to this challenge. They are data structures that look like ordinary data structures (maps, sets, text strings, etc.), except that they are collaborative: when one user updates their copy of a CRDT, their changes automatically show up for everyone else. Each user sees their own changes immediately, while under the hood, the CRDT broadcasts a message describing the change to everyone else. Other users see the change once they receive this message.},
  langid = {Englisch},
  organization = {https://mattweidner.com/}
}

@article{weidnerThesisProposalIncreasing,
  title = {Thesis {{Proposal}}: {{Increasing}} the {{Flexibility}} of {{Collaborative Data Structures}}},
  author = {Weidner, Matthew},
  abstract = {A collaborative data structure is a data structure whose state can be shared and edited across multiple devices, in the style of a collaborative app. Conflict-free Replicated Data Types (CRDTs) are a class of collaborative data structures that have seen growing interest from researchers and developers, especially as a building block for local-first software. However, CRDTs are not yet widely used in practice. This is in part due to their inflexibility: traditional CRDTs are a small number of expert-designed algorithms, which do not meet the needs of every application.},
  langid = {english},
  file = {/home/alexej/Zotero/storage/FAV76HIQ/Weidner - Thesis Proposal Increasing the Flexibility of Col.pdf}
}

@article{zhangProgrammerExperienceWhen2023,
  title = {Programmer {{Experience When Using CRDTs}} to {{Build Collaborative Webapps}}: {{Initial Insights}}},
  author = {Zhang, Yicheng and Weidner, Matthew and Miller, Heather},
  date = {2023},
  abstract = {Conflict-free Replicated Data Types (CRDTs) are data structures that are supposed to make multi-user applications easier to develop. In this paper, we describe our initial insights from a qualitative user study that seeks to answer the question: how hard is it in practice to add real-time collaboration to a web app using CRDTs? We performed coding interviews with 15 participants using three different CRDT libraries; Automerge, Collabs, and Yjs. We observed participants’ confusion between local and collaborative data, their struggle to understand replica initialization, and the impact of different library designs on how quickly or slowly participants got started implementing their solutions, and how buggy or not, their solutions tended to be. We hope our work highlights directions for CRDT library developers to further improve.},
  langid = {english},
  file = {/home/alexej/Zotero/storage/RHCIY8N4/Zhang et al. - 2023 - Programmer Experience When Using CRDTs to Build Co.pdf}
}
